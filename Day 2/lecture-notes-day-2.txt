Day 2: Data Types, Numbers, Operations, Type Conversion, f-Strings 

Data Types include: 
  -> Strings - "hello"
  -> Intergers - whole numbers -> 123,456
  -> Float - Numbers with decimal places-> 12.5446 
  -> Booleans are either True or False. Booleans don't have quotation marks around them. It should be bool = False

TypeError happens when we mix data types e.g strings and numbers.

Subscripting pulling out a letter from a string using square brackets []:
  e.g if we have "hello" and we want to pull out "h"
  -> we'll write print("Hello"[0]) this will pop out the letter "H", the letter at index 0
  
Functions
type() helps us know the type of data type we are working with
  print(type(Variable)) #print the data type of the variable
type conversion or type casting; changing one type of data to another 
  e.g theVariableWeAreConverting = str(variableWeWantToConvert) #converst the variable data type to a string

Type conversion is also known as type casting. Type function is used to investigate the type of data you are working with.
  
Maths Operations
  Add +
  Minus -
  Multiply *
  Divide /
  Power  **
  When it comes to Maths we use PEMDAS -> Parentheses, Exponents, Multiplication, Division, Addition, Subtraction.
  round(number/number) -> rounds off a number to the nearest whole number
  round(number/number, 2) -> rounds up a number to two decimal places or any number you set this value to
  number
  //number -> floor division rounds off automatically to two decimal places
  number = number + 1, can be written as number += 1

f-strings
f-strings make it easy for us to use different data types in the same line of code.
f-strings are a great new way to format strings.
f-string, allows us to be able to print different data types in one print statement, example below
  score = 12
  print(f"your score is {score}.")

Keep going, and get this in the bag

Day 2 Complete!